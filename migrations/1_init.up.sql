-- YouTube
-- В качестве проекта будет сервис для просмотра видео роликов
-- У проекта будет возможность:
-- 1) просматривать видео ролики;
-- 2) видеть статистику просмотренных видео роликов;
-- 3) ставить лайки под видео роликом;
-- 4) комментировать видео ролики;

BEGIN;

CREATE TABLE IF NOT EXISTS users
(
    id          BIGINT generated BY DEFAULT AS IDENTITY,
    login       varchar(255) NOT NULL,
    password    varchar(40) NOT NULL,
    created_at  TIMESTAMP DEFAULT current_timestamp,

    CONSTRAINT users_id_pkey PRIMARY KEY (id)
);

CREATE INDEX IF NOT EXISTS users_login_idx on users (login);

CREATE TABLE IF NOT EXISTS videos
(
    id              BIGINT generated BY DEFAULT AS IDENTITY,
    title           varchar(255) NOT NULL,
    description     TEXT,
    number_of_views BIGINT NOT NULL DEFAULT 0,
    number_of_likes BIGINT NOT NULL DEFAULT 0,
    created_at      TIMESTAMP DEFAULT current_timestamp,

    CONSTRAINT videos_id_pkey PRIMARY KEY (id)
);

CREATE EXTENSION IF NOT EXISTS pg_trgm;
CREATE INDEX IF NOT EXISTS videos_title_idx ON videos USING gin (title gin_trgm_ops);

CREATE TABLE IF NOT EXISTS video_views
(
    id         BIGINT generated BY DEFAULT AS IDENTITY,
    video_id   BIGINT NOT NULL,
    user_id    BIGINT,
    is_liked   BOOLEAN,
    created_at TIMESTAMP DEFAULT current_timestamp,

    CONSTRAINT video_views_id_pkey PRIMARY KEY (id),

    -- on delete restrict обозначает, что при удалении записи из таблицы videos, произойдет ошибка
    CONSTRAINT video_views_fk_video_id FOREIGN KEY (video_id) REFERENCES videos (id) ON DELETE RESTRICT,
    CONSTRAINT video_views_fk_user_id FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS video_comments
(
    id         BIGINT generated BY DEFAULT AS IDENTITY,
    video_id   BIGINT NOT NULL,
    user_id    BIGINT NOT NULL,
    comment    text NOT NULL,
    created_at TIMESTAMP DEFAULT current_timestamp,

    CONSTRAINT video_comments_id_pkey PRIMARY KEY (id),

    CONSTRAINT video_comments_fk_video_id FOREIGN KEY (video_id) REFERENCES videos (id) ON DELETE RESTRICT,
    CONSTRAINT video_comments_fk_user_id FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE RESTRICT
);

COMMIT;
